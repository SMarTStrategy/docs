{"version":3,"sources":["webpack:///./src/con/components/common/Button.tsx","webpack:///./src/con/components/common/SectionTitle.tsx","webpack:///./src/con/data/2021/tracks.ts","webpack:///./src/con/contexts/SectionsContext.tsx","webpack:///./src/con/components/2021/Speakers/SpeakerSocialList.tsx","webpack:///./src/con/components/templates/SpeakerTemplate.tsx","webpack:///./src/con/components/2021/Speakers/SpeakerConferenceSlot.tsx","webpack:///./src/con/components/2021/templates/SpeakerTemplate.tsx","webpack:///./src/con/hooks/useConferences.tsx","webpack:///./src/con/data/2021/nav.ts","webpack:///./src/con/data/2021/footer.ts","webpack:///./src/con/data/2021/prices.ts","webpack:///./src/con/data/2021/meta.ts","webpack:///./src/con/components/2021/layout/index.tsx","webpack:///./src/con/utils.tsx"],"names":["Button","children","className","empty","disabled","to","size","external","props","classNames","classnames","small","href","target","rel","SectionTitle","dark","lined","h1","tracks","id","type","date","SectionsContext","createContext","SpeakerSocialList","speaker","github","twitter","SpeakerTemplate","SpeakerConferenceSlotComponent","pageContext","extraContent","name","job","company","description","slug","conferences","useConferences","sort","sortByStartDate","data","useStaticQuery","image","getImage","allFile","nodes","find","imageData","firstname","split","property","content","alt","dangerouslySetInnerHTML","__html","length","map","conference","key","title","SpeakerConferenceSlot","track","t","start","end","short","getConferenceDate","logoAlwaysVisible","edition","useContext","ConfContext","allMarkdownRemark","filter","conferenceData","frontmatter","speakers","includes","fields","collection","headings","value","nav","logoLink","backLink","text","links","mobileOnly","footer","link","prices","languages","offers","limitDate","price","meta","TITLE","DESCRIPTION","OG_IMAGE","process","URL","Layout","offersData","sortedOffers","a","b","dayjs","isAfter","activeOffer","offer","availability","priceCurrency","url","validFrom","eventData","eventStatus","eventAttendanceMode","startDate","endDate","organizer","location","address","addressLocality","addressRegion","postalCode","streetAddress","pathname","useLocation","useState","sectionsVisibles","setSectionsVisibles","activeLink","useMemo","lastSectionVisible","useEffect","window","history","replaceState","Provider","JSON","stringify","defer","src","LayoutBase","conference1","conference2","date1","date2","isBefore","toLocaleDate","format","convertTime","time","isMorningTime","parseInt","getConferenceTimes"],"mappings":"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","file":"component---src-con-components-2021-templates-speaker-template-tsx-62dd3640e8905e7ee0ca.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLDivElement> {\n  size?: 'small' | 'large';\n  className?: string;\n  empty?: boolean;\n  disabled?: boolean;\n  to?: string;\n  external?: boolean;\n}\n\nconst Button: React.ComponentType<ButtonProps> = ({\n  children,\n  className,\n  empty,\n  disabled,\n  to,\n  size = 'large',\n  external = false,\n  ...props\n}) => {\n  const classNames = classnames('conf__button', { small: 'small' === size, empty, disabled }, className);\n  const externalProps = { target: '_blank', rel: 'noopener noreferrer' };\n\n  return to ? (\n    <a className={classNames} href={to} {...(external ? externalProps : {})}>\n      {children}\n    </a>\n  ) : (\n    <div className={classNames} {...props}>\n      {children}\n    </div>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport classnames from 'classnames';\n\ninterface SectionTitleProps {\n  dark?: boolean;\n  lined?: boolean;\n  h1?: boolean;\n  small?: boolean;\n}\n\nconst SectionTitle: React.ComponentType<SectionTitleProps> = ({\n  children,\n  dark = false,\n  lined = false,\n  h1 = false,\n  small = false,\n}) => (\n  <div className={classnames('conf__section-title', { dark, small })}>\n    {h1 ? <h1 className=\"h2 title__layer\">{children}</h1> : <h2 className=\"title__layer\">{children}</h2>}\n    <div className={classnames('h2', { lined })}>{children}</div>\n  </div>\n);\n\nexport default SectionTitle;\n","import { Track } from '../types';\n\nconst tracks: Track[] = [\n  {\n    id: 'EN',\n    type: 'English-speaking track',\n    date: '10 sep, 2021',\n  },\n  {\n    id: 'FR',\n    type: 'French-speaking track',\n    date: '10 sep, 2021',\n  },\n];\n\nexport default tracks;\n","import { createContext } from 'react';\n\ninterface SectionsContextInterface {\n  sectionsVisibles: string[];\n  setSectionsVisibles: (sections: string[]) => void;\n}\n\nconst SectionsContext = createContext<SectionsContextInterface>(null);\n\nexport default SectionsContext;\n","import React from 'react';\nimport { Speaker } from '@con/types';\n\ninterface SpeakerSocialListProps {\n  speaker: Speaker;\n}\n\nconst SpeakerSocialList: React.ComponentType<SpeakerSocialListProps> = ({ speaker }) => {\n  const { github, twitter } = speaker;\n  return (\n    <div className=\"social__list\">\n      {github && (\n        <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n          <span className=\"icon-github\" />\n        </a>\n      )}\n      {twitter && (\n        <a href={twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n          <span className=\"icon-twitter\" />\n        </a>\n      )}\n    </div>\n  );\n};\n\nexport default SpeakerSocialList;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport SectionTitle from '@con/components/common/SectionTitle';\nimport { PageProps, useStaticQuery, graphql } from 'gatsby';\nimport { getConferenceDate, sortByStartDate } from '@con/utils';\nimport Button from '@con/components/common/Button';\nimport { Conference, Track } from 'src/con/types';\nimport useConferences from '@con/hooks/useConferences';\nimport SpeakerSocialList from '@con/components/2021/Speakers/SpeakerSocialList';\nimport '@con/styles/index.scss';\n\nexport const SpeakerConferenceSlot: React.ComponentType<{ conference: Conference; tracks: Track[] }> = ({\n  tracks,\n  conference,\n}) => {\n  const track = conference.track && tracks.find((t) => t.id === conference.track);\n  const { start, end, date, title, slug, short } = conference;\n  return (\n    <div className=\"speaker__conference-slot dotted-corner\">\n      <div className=\"conference__track\">\n        {track ? (\n          <>\n            {' '}\n            <span className=\"h6\">{`Track #${track.id}`}</span>\n            <span className=\"overline\">{track.type}</span>\n          </>\n        ) : null}\n      </div>\n      <div className=\"conference__content\">\n        <span className=\"overline\">{getConferenceDate(date, start, end)}</span>\n        <h3 className=\"h6 lined lined-left\">{title}</h3>\n        <p>{short}</p>\n        <Button className=\"square\" size=\"small\" to={slug}>\n          See details\n        </Button>\n      </div>\n    </div>\n  );\n};\n\ninterface SpeakerTemplateProps extends PageProps {\n  pageContext: {\n    html: string;\n    title: string;\n    id: string;\n    name: string;\n    slug: string;\n    job: string;\n    company?: string;\n    description: string;\n    twitter?: string;\n    github?: string;\n  };\n  SpeakerConferenceSlotComponent: React.ComponentType<{ conference: Conference }>;\n  extraContent?: JSX.Element;\n}\n\nconst SpeakerTemplate: React.ComponentType<SpeakerTemplateProps> = ({\n  SpeakerConferenceSlotComponent,\n  pageContext,\n  extraContent,\n}) => {\n  const { id, name, job, company, description, slug, twitter, github } = pageContext;\n  const conferences = useConferences(id).sort(sortByStartDate);\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { sourceInstanceName: { eq: \"speakersImages\" } }) {\n        nodes {\n          name\n          childImageSharp {\n            gatsbyImageData(width: 400, placeholder: DOMINANT_COLOR)\n          }\n        }\n      }\n    }\n  `);\n  const image = getImage(data.allFile.nodes.find((imageData) => imageData.name === id));\n  const firstname = name.split(' ')[0];\n  return (\n    <div className=\"conf__speaker-profile\">\n      <Helmet>\n        <title>{name}</title>\n        <meta property=\"og:title\" content={name} />\n        <meta name=\"twitter:title\" content={name} />\n      </Helmet>\n\n      <div className=\"speaker__header\">\n        <SectionTitle dark lined h1>\n          <strong>{name}</strong>\n        </SectionTitle>\n        <p className=\"overline speaker__job\">\n          {job}\n          {company ? (\n            <>\n              <strong> @ {company}</strong>\n            </>\n          ) : null}\n        </p>\n      </div>\n      <div className=\"container\">\n        <div className=\"speaker__about\">\n          <div className=\"speaker__picture\">\n            <div className=\"circle__effect\">\n              <GatsbyImage image={image} className=\"circle__picture\" alt={name} />\n            </div>\n          </div>\n          <div className=\"speaker__details\">\n            <div dangerouslySetInnerHTML={{ __html: description }} />\n            <SpeakerSocialList speaker={{ id, description, name, job, slug, github, twitter }} />\n            {extraContent}\n          </div>\n          {0 < conferences.length ? (\n            <div className=\"speaker__schedule\">\n              <h2 className=\"schedule__title h5\">{`${firstname}'s schedule`}</h2>\n              {conferences.map((conference) => (\n                <SpeakerConferenceSlotComponent key={conference.title} conference={conference} />\n              ))}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SpeakerTemplate;\n","import React from 'react';\nimport { getConferenceDate } from '@con/utils';\nimport Button from '@con/components/common/Button';\nimport { Conference } from 'src/con/types';\nimport tracks from '@con/data/2021/tracks';\n\nconst SpeakerConferenceSlot: React.ComponentType<{ conference: Conference }> = ({ conference }) => {\n  const track = conference.track && tracks.find((t) => t.id === conference.track);\n  const { start, end, date, title, slug, short } = conference;\n  return (\n    <div className=\"speaker__conference-slot dotted-corner\">\n      <div className=\"conference__track\">\n        {track ? (\n          <>\n            {' '}\n            <span className=\"h6\">{`Track #${track.id}`}</span>\n            <span className=\"overline\">{track.type}</span>\n          </>\n        ) : null}\n      </div>\n      <div className=\"conference__content\">\n        <span className=\"overline\">{getConferenceDate(date, start, end)}</span>\n        <h3 className=\"h6 lined lined-left\">{title}</h3>\n        <p>{short}</p>\n        <Button className=\"square\" size=\"small\" to={slug}>\n          See details\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default SpeakerConferenceSlot;\n","import React from 'react';\nimport Layout from '@con/components/2021/layout';\nimport { PageProps } from 'gatsby';\nimport SpeakerTemplateBase from '@con/components/templates/SpeakerTemplate';\nimport SpeakerConferenceSlot from '@con/components/2021/Speakers/SpeakerConferenceSlot';\n\ninterface SpeakerTemplateProps extends PageProps {\n  pageContext: {\n    html: string;\n    title: string;\n    id: string;\n    name: string;\n    slug: string;\n    job: string;\n    company: string;\n    description: string;\n    edition: string;\n  };\n}\n\nconst SpeakerTemplate: React.ComponentType<SpeakerTemplateProps> = (props) => {\n  return (\n    <Layout logoAlwaysVisible>\n      <SpeakerTemplateBase {...props} SpeakerConferenceSlotComponent={SpeakerConferenceSlot} />\n    </Layout>\n  );\n};\n\nexport default SpeakerTemplate;\n","import { useContext } from 'react';\nimport { ConfContext } from '@con/components/layout';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Conference } from 'src/con/types';\n\nconst useConferences: (speaker?: string) => Conference[] = (speaker) => {\n  const { edition } = useContext(ConfContext);\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(limit: 1000, filter: { frontmatter: { type: { eq: \"conference\" } } }) {\n        nodes {\n          frontmatter {\n            title\n            speakers\n            track\n            start\n            date\n            end\n            short\n            github\n          }\n          headings(depth: h1) {\n            value\n          }\n          fields {\n            slug\n            collection\n          }\n        }\n      }\n    }\n  `);\n\n  const conferences = data.allMarkdownRemark.nodes\n    .filter((conferenceData) => !speaker || conferenceData.frontmatter.speakers.includes(speaker))\n    .filter((conferenceData) => conferenceData.fields.collection === `con${edition}`)\n    .map((conference) => ({\n      ...conference.frontmatter,\n      title: conference.headings?.[0].value,\n      slug: `/con/${edition}${conference.fields.slug}`,\n    }));\n\n  return conferences;\n};\n\nexport default useConferences;\n","const nav = {\n  logoLink: '/',\n  backLink: {\n    to: '/con/',\n    text: 'Back to current edition',\n  },\n  links: [\n    {\n      to: '/con/2021/',\n      text: 'Home',\n      mobileOnly: true,\n    },\n    {\n      to: '/con/2021/speakers',\n      text: 'Speakers',\n    },\n    {\n      to: '/con/2021/#schedule',\n      text: 'Schedule',\n    },\n    {\n      to: '/con/2021/#venue',\n      text: 'Venue',\n    },\n    {\n      to: '/con/2021/review',\n      text: 'Review',\n    },\n  ],\n};\n\nexport default nav;\n","const footer = [\n  {\n    title: 'The event',\n    links: [\n      {\n        title: 'Speakers',\n        link: '/con/2021/speakers',\n      },\n      {\n        title: 'Schedule',\n        link: '/con/2021/#schedule',\n      },\n      {\n        title: 'Venue',\n        link: '/con/2021/#venue',\n      },\n      {\n        title: 'Current edition',\n        link: '/con/2022/',\n      },\n    ],\n  },\n  {\n    title: 'Legal',\n    links: [\n      {\n        title: 'Code of conduct',\n        link: '/con/2021/code-of-conduct',\n      },\n      {\n        title: 'FAQ',\n        link: '/con/2021/faq',\n      },\n      {\n        title: 'Transparency',\n        link: '/con/2021/transparency',\n      },\n    ],\n  },\n];\n\nexport default footer;\n","import { Price } from '@con/types';\n\nconst prices: Price[] = [\n  {\n    id: 1,\n    title: 'On-site edition',\n    languages: 'French and english-speaking tracks',\n    offers: [\n      {\n        title: 'Early bird',\n        limitDate: '2021-04-30',\n        price: 69,\n      },\n      {\n        title: 'Regular ticket',\n        limitDate: '2021-08-20',\n        price: 89,\n      },\n      {\n        title: 'Late bird',\n        limitDate: '2021-09-09',\n        price: 109,\n      },\n    ],\n  },\n  {\n    id: 2,\n    title: 'Online edition',\n    languages: 'English-speaking track',\n    offers: [\n      {\n        title: 'Online ticket',\n        limitDate: '2021-09-08',\n        price: 39,\n      },\n    ],\n  },\n];\n\nexport default prices;\n","export const TITLE = 'API Platform Conference 2021';\nexport const DESCRIPTION = 'The first international conference dedicated to API Platform and its ecosystem';\nexport const OG_IMAGE = `${process.env.GATSBY_ROOT_URL}/conf-facebook.png`;\nexport const URL = 'https://api-platform.com/con/2021/';\n\nconst meta = {\n  TITLE,\n  DESCRIPTION,\n  OG_IMAGE,\n  URL,\n};\n\nexport default meta;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport Helmet from 'react-helmet';\nimport nav from '@con/data/2021/nav';\nimport footer from '@con/data/2021/footer';\nimport prices from '@con/data/2021/prices';\nimport { ConfContext } from '@con/components/layout';\nimport SectionsContext from '@con/contexts/SectionsContext';\nimport { useLocation } from '@reach/router';\nimport meta from '@con/data/2021/meta';\nimport LayoutBase from '@con/components/layout/LayoutBase';\n\ninterface LayoutProps {\n  logoAlwaysVisible?: boolean;\n}\n\nconst Layout: React.ComponentType<LayoutProps> = ({ logoAlwaysVisible, children }) => {\n  const offersData = prices.map((price) => {\n    const sortedOffers = price.offers.sort((a, b) => {\n      if (dayjs(a.limitDate).isAfter(dayjs(b.limitDate))) return 1;\n      if (dayjs(b.limitDate).isAfter(dayjs(a.limitDate))) return -1;\n      return 0;\n    });\n    const activeOffer =\n      sortedOffers.find((offer) => dayjs(offer.limitDate).isAfter(dayjs())) || sortedOffers[sortedOffers.length - 1];\n    return {\n      '@type': 'Offer',\n      availability: 'https://schema.org/InStock',\n      price: `${activeOffer.price}.00`,\n      name: 1 === price.offers.length ? price.title : `${price.title} - ${activeOffer.title}`,\n      priceCurrency: 'EUR',\n      url: 'https://www.eventbrite.fr/e/api-platform-conference-2021-tickets-146559873527',\n      validFrom: '2021-03-19',\n    };\n  });\n\n  const eventData = {\n    '@context': 'https://schema.org',\n    '@type': 'Event',\n    name: 'API Platform Conference 2021',\n    description: 'The first international conference dedicated to API Platform and its ecosystem',\n    url: 'https://api-platform.com/con/2021/',\n    eventStatus: 'http://schema.org/EventScheduled',\n    eventAttendanceMode: 'https://schema.org/MixedEventAttendanceMode',\n    startDate: '2021-09-10',\n    endDate: '2021-09-10',\n    organizer: {\n      '@type': 'Organization',\n      name: 'Les-Tilleuls.coop',\n      url: 'https://les-tilleuls.coop/en',\n    },\n    location: [\n      {\n        '@type': 'Place',\n        name: 'Euratechnologies',\n        address: {\n          '@type': 'PostalAddress',\n          addressLocality: 'Lille',\n          addressRegion: 'Hauts de France',\n          postalCode: '59000',\n          streetAddress: 'Place de Saintignon, 165 avenue de Bretagne',\n        },\n      },\n      {\n        '@type': 'VirtualLocation',\n        url: 'https://api-platform.com/con/2021/',\n      },\n    ],\n    image: meta.OG_IMAGE,\n    offers: offersData,\n  };\n\n  // anchors handler\n  const { pathname } = useLocation();\n  const [sectionsVisibles, setSectionsVisibles] = useState<string[]>([]);\n  const activeLink = useMemo(() => {\n    const lastSectionVisible = sectionsVisibles?.[sectionsVisibles.length - 1];\n    if (!lastSectionVisible || 'home' === lastSectionVisible) return pathname;\n    return sectionsVisibles.length ? `${pathname}#${sectionsVisibles[sectionsVisibles.length - 1]}` : pathname;\n  }, [sectionsVisibles, pathname]);\n\n  useEffect(() => {\n    window.history.replaceState({}, '', activeLink);\n  }, [activeLink]);\n\n  return (\n    <ConfContext.Provider value={{ nav, activeLink, edition: '2021' }}>\n      <SectionsContext.Provider value={{ sectionsVisibles, setSectionsVisibles }}>\n        <Helmet>\n          <script type=\"application/ld+json\">{JSON.stringify(eventData)}</script>\n          <script defer src=\"https://unpkg.com/smoothscroll-polyfill/dist/smoothscroll.min.js\" />\n        </Helmet>\n        <LayoutBase edition=\"2021\" meta={meta} logoAlwaysVisible={logoAlwaysVisible} footer={footer}>\n          {children}\n        </LayoutBase>\n      </SectionsContext.Provider>\n    </ConfContext.Provider>\n  );\n};\n\nexport default Layout;\n","import dayjs from 'dayjs';\nimport { Conference } from './types';\n\nexport const sortByStartDate: (conference1: Conference, conference2: Conference) => 1 | -1 | 0 = (\n  conference1,\n  conference2\n) => {\n  const date1 = conference1.start ? dayjs(`${conference1.date}T${conference1.start}`) : dayjs();\n  const date2 = conference2.start ? dayjs(`${conference2.date}T${conference2.start}`) : dayjs();\n  if (date1.isBefore(date2)) return -1;\n  if (date1.isAfter(date2)) return 1;\n  return 0;\n};\nexport const toLocaleDate: (date: string) => string = (date) => dayjs(date).format('ll');\n\nexport const convertTime: (date: string, time: string) => string = (date, time) =>\n  dayjs(`${date}T${time}`).format('HH:mm A');\n\nexport const isMorningTime: (time?: string) => boolean = (time) => time && 12 >= parseInt(time.split(':')[0], 10);\n\nexport const getConferenceTimes: (date: string, start?: string, end?: string) => string = (date, start, end) =>\n  start && end ? `${convertTime(date, start)} - ${convertTime(date, end)}` : toLocaleDate(date);\n\nexport const getConferenceDate: (date: string, start?: string, end?: string) => string = (date, start, end) =>\n  start && end ? `${toLocaleDate(date)} · ${getConferenceTimes(date, start, end)}` : toLocaleDate(date);\n"],"sourceRoot":""}