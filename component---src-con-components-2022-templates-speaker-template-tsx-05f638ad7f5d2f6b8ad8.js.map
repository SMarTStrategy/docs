{"version":3,"sources":["webpack:///./src/con/components/common/Button.tsx","webpack:///./src/con/components/common/SectionTitle.tsx","webpack:///./src/con/data/2022/prices.ts","webpack:///./src/con/contexts/SectionsContext.tsx","webpack:///./src/con/components/2021/Speakers/SpeakerSocialList.tsx","webpack:///./src/con/hooks/useEventBriteModal.tsx","webpack:///./src/con/components/templates/SpeakerTemplate.tsx","webpack:///./src/con/components/2022/BuyButton.tsx","webpack:///./src/con/components/2022/Speakers/SpeakerConferenceSlot.tsx","webpack:///./src/con/components/2022/templates/SpeakerTemplate.tsx","webpack:///./src/con/hooks/useConferences.tsx","webpack:///./src/con/data/2022/nav.ts","webpack:///./src/con/data/2022/footer.ts","webpack:///./src/con/data/2022/meta.ts","webpack:///./src/con/components/2022/layout/index.tsx","webpack:///./src/con/data/2022/days.ts","webpack:///./src/con/utils.tsx"],"names":["Button","children","className","empty","disabled","to","size","external","props","classNames","classnames","small","href","target","rel","SectionTitle","dark","lined","h1","prices","id","title","languages","offers","price","limitDate","startDate","SectionsContext","createContext","SpeakerSocialList","speaker","github","twitter","useEventBriteModal","isEventBriteLoaded","useContext","ConfContext","useState","isWidgetCreated","setIsWidgetCreated","useLayoutEffect","window","EBWidgets","createWidget","widgetType","eventId","modal","modalTriggerElementId","SpeakerTemplate","SpeakerConferenceSlotComponent","pageContext","extraContent","name","job","company","description","slug","conferences","useConferences","sort","sortByStartDate","data","useStaticQuery","image","getImage","allFile","nodes","find","imageData","firstname","split","property","content","alt","dangerouslySetInnerHTML","__html","length","map","conference","key","BuyButton","SpeakerConferenceSlot","day","getDayByDate","date","start","end","short","track","getConferenceDate","getConferenceTimes","logoAlwaysVisible","edition","allMarkdownRemark","filter","conferenceData","frontmatter","speakers","includes","fields","collection","headings","value","nav","logoLink","links","text","mobileOnly","footer","link","meta","TITLE","DESCRIPTION","OG_IMAGE","process","URL","Layout","offersData","sortedOffers","a","b","dayjs","isAfter","activeOffer","offer","availability","priceCurrency","url","validFrom","eventData","eventStatus","eventAttendanceMode","endDate","organizer","location","address","addressLocality","addressRegion","postalCode","streetAddress","pathname","useLocation","sectionsVisibles","setSectionsVisibles","activeLink","useMemo","lastSectionVisible","useEffect","history","replaceState","setIsEventBriteLoaded","s","document","createElement","src","onload","body","appendChild","Provider","type","JSON","stringify","defer","LayoutBase","navButton","days","tracks","single","conference1","conference2","date1","date2","isBefore","toLocaleDate","format","convertTime","time","isMorningTime","parseInt"],"mappings":"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","file":"component---src-con-components-2022-templates-speaker-template-tsx-05f638ad7f5d2f6b8ad8.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLDivElement> {\n  size?: 'small' | 'large';\n  className?: string;\n  empty?: boolean;\n  disabled?: boolean;\n  to?: string;\n  external?: boolean;\n}\n\nconst Button: React.ComponentType<ButtonProps> = ({\n  children,\n  className,\n  empty,\n  disabled,\n  to,\n  size = 'large',\n  external = false,\n  ...props\n}) => {\n  const classNames = classnames('conf__button', { small: 'small' === size, empty, disabled }, className);\n  const externalProps = { target: '_blank', rel: 'noopener noreferrer' };\n\n  return to ? (\n    <a className={classNames} href={to} {...(external ? externalProps : {})}>\n      {children}\n    </a>\n  ) : (\n    <div className={classNames} {...props}>\n      {children}\n    </div>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport classnames from 'classnames';\n\ninterface SectionTitleProps {\n  dark?: boolean;\n  lined?: boolean;\n  h1?: boolean;\n  small?: boolean;\n}\n\nconst SectionTitle: React.ComponentType<SectionTitleProps> = ({\n  children,\n  dark = false,\n  lined = false,\n  h1 = false,\n  small = false,\n}) => (\n  <div className={classnames('conf__section-title', { dark, small })}>\n    {h1 ? <h1 className=\"h2 title__layer\">{children}</h1> : <h2 className=\"title__layer\">{children}</h2>}\n    <div className={classnames('h2', { lined })}>{children}</div>\n  </div>\n);\n\nexport default SectionTitle;\n","import { Price } from '@con/types';\n\nconst prices: Price[] = [\n  {\n    id: 1,\n    title: 'Conference',\n    languages: 'French and english-speaking tracks',\n    offers: [\n      {\n        title: '2 days on-site event',\n        price: 129,\n        limitDate: '2022-08-20',\n      },\n      {\n        title: '1-day on-site event',\n        price: 89,\n        limitDate: '2022-08-20',\n      },\n      {\n        title: '2 days on-site event',\n        price: 169,\n        startDate: '2022-08-21',\n      },\n      {\n        title: '1-day on-site event',\n        price: 109,\n        startDate: '2022-08-21',\n      },\n      {\n        title: 'Online ticket',\n        price: 59,\n      },\n    ],\n  },\n  {\n    id: 2,\n    title: 'Workshops',\n    languages: 'Learn the best of API Platform 3',\n    offers: [\n      {\n        title: 'Workshop API Platform 3',\n        price: 500,\n      },\n      {\n        title: 'Workshop DDD',\n        price: 500,\n      },\n      {\n        title: '2-days workshops',\n        price: 800,\n      },\n      {\n        title: 'Full package: 2 workshops and 2-days conference',\n        price: 900,\n      },\n    ],\n  },\n];\n\nexport default prices;\n","import { createContext } from 'react';\n\ninterface SectionsContextInterface {\n  sectionsVisibles: string[];\n  setSectionsVisibles: (sections: string[]) => void;\n}\n\nconst SectionsContext = createContext<SectionsContextInterface>(null);\n\nexport default SectionsContext;\n","import React from 'react';\nimport { Speaker } from '@con/types';\n\ninterface SpeakerSocialListProps {\n  speaker: Speaker;\n}\n\nconst SpeakerSocialList: React.ComponentType<SpeakerSocialListProps> = ({ speaker }) => {\n  const { github, twitter } = speaker;\n  return (\n    <div className=\"social__list\">\n      {github && (\n        <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n          <span className=\"icon-github\" />\n        </a>\n      )}\n      {twitter && (\n        <a href={twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n          <span className=\"icon-twitter\" />\n        </a>\n      )}\n    </div>\n  );\n};\n\nexport default SpeakerSocialList;\n","import { useLayoutEffect, useContext, useState } from 'react';\nimport { ConfContext } from '@con/components/layout';\n\nconst useEventBriteModal: (id: string) => void = (id) => {\n  const { isEventBriteLoaded } = useContext(ConfContext);\n  const [isWidgetCreated, setIsWidgetCreated] = useState(false);\n\n  useLayoutEffect(() => {\n    if (isEventBriteLoaded && !isWidgetCreated) {\n      // @ts-expect-error eventbrite widget\n      window.EBWidgets?.createWidget({\n        widgetType: 'checkout',\n        eventId: '304104152707',\n        modal: true,\n        modalTriggerElementId: id,\n      });\n      setIsWidgetCreated(true);\n    }\n  }, [isEventBriteLoaded, id, isWidgetCreated, setIsWidgetCreated]);\n};\n\nexport default useEventBriteModal;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport SectionTitle from '@con/components/common/SectionTitle';\nimport { PageProps, useStaticQuery, graphql } from 'gatsby';\nimport { getConferenceDate, sortByStartDate } from '@con/utils';\nimport Button from '@con/components/common/Button';\nimport { Conference, Track } from 'src/con/types';\nimport useConferences from '@con/hooks/useConferences';\nimport SpeakerSocialList from '@con/components/2021/Speakers/SpeakerSocialList';\nimport '@con/styles/index.scss';\n\nexport const SpeakerConferenceSlot: React.ComponentType<{ conference: Conference; tracks: Track[] }> = ({\n  tracks,\n  conference,\n}) => {\n  const track = conference.track && tracks.find((t) => t.id === conference.track);\n  const { start, end, date, title, slug, short } = conference;\n  return (\n    <div className=\"speaker__conference-slot dotted-corner\">\n      <div className=\"conference__track\">\n        {track ? (\n          <>\n            {' '}\n            <span className=\"h6\">{`Track #${track.id}`}</span>\n            <span className=\"overline\">{track.type}</span>\n          </>\n        ) : null}\n      </div>\n      <div className=\"conference__content\">\n        <span className=\"overline\">{getConferenceDate(date, start, end)}</span>\n        <h3 className=\"h6 lined lined-left\">{title}</h3>\n        <p>{short}</p>\n        <Button className=\"square\" size=\"small\" to={slug}>\n          See details\n        </Button>\n      </div>\n    </div>\n  );\n};\n\ninterface SpeakerTemplateProps extends PageProps {\n  pageContext: {\n    html: string;\n    title: string;\n    id: string;\n    name: string;\n    slug: string;\n    job: string;\n    company?: string;\n    description: string;\n    twitter?: string;\n    github?: string;\n  };\n  SpeakerConferenceSlotComponent: React.ComponentType<{ conference: Conference }>;\n  extraContent?: JSX.Element;\n}\n\nconst SpeakerTemplate: React.ComponentType<SpeakerTemplateProps> = ({\n  SpeakerConferenceSlotComponent,\n  pageContext,\n  extraContent,\n}) => {\n  const { id, name, job, company, description, slug, twitter, github } = pageContext;\n  const conferences = useConferences(id).sort(sortByStartDate);\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { sourceInstanceName: { eq: \"speakersImages\" } }) {\n        nodes {\n          name\n          childImageSharp {\n            gatsbyImageData(width: 400, placeholder: DOMINANT_COLOR)\n          }\n        }\n      }\n    }\n  `);\n  const image = getImage(data.allFile.nodes.find((imageData) => imageData.name === id));\n  const firstname = name.split(' ')[0];\n  return (\n    <div className=\"conf__speaker-profile\">\n      <Helmet>\n        <title>{name}</title>\n        <meta property=\"og:title\" content={name} />\n        <meta name=\"twitter:title\" content={name} />\n      </Helmet>\n\n      <div className=\"speaker__header\">\n        <SectionTitle dark lined h1>\n          <strong>{name}</strong>\n        </SectionTitle>\n        <p className=\"overline speaker__job\">\n          {job}\n          {company ? (\n            <>\n              <strong> @ {company}</strong>\n            </>\n          ) : null}\n        </p>\n      </div>\n      <div className=\"container\">\n        <div className=\"speaker__about\">\n          <div className=\"speaker__picture\">\n            <div className=\"circle__effect\">\n              <GatsbyImage image={image} className=\"circle__picture\" alt={name} />\n            </div>\n          </div>\n          <div className=\"speaker__details\">\n            <div dangerouslySetInnerHTML={{ __html: description }} />\n            <SpeakerSocialList speaker={{ id, description, name, job, slug, github, twitter }} />\n            {extraContent}\n          </div>\n          {0 < conferences.length ? (\n            <div className=\"speaker__schedule\">\n              <h2 className=\"schedule__title h5\">{`${firstname}'s schedule`}</h2>\n              {conferences.map((conference) => (\n                <SpeakerConferenceSlotComponent key={conference.title} conference={conference} />\n              ))}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SpeakerTemplate;\n","import React from 'react';\nimport useEventBriteModal from '@con/hooks/useEventBriteModal';\nimport Button, { ButtonProps } from '@con/components/common/Button';\n\ninterface BuyButtonProps extends ButtonProps {\n  id: string;\n}\n\nconst BuyButton: React.ComponentType<BuyButtonProps> = ({ children, id, ...props }) => {\n  useEventBriteModal(id);\n\n  return (\n    <Button id={id} {...props}>\n      {children}\n    </Button>\n  );\n};\n\nexport default BuyButton;\n","import React from 'react';\nimport { getConferenceDate, getConferenceTimes } from '@con/utils';\nimport Button from '@con/components/common/Button';\nimport { Conference, Track } from 'src/con/types';\nimport { getDayByDate } from '@con/data/2022/days';\n\nconst SpeakerConferenceSlot: React.ComponentType<{ conference: Conference; tracks: Track[] }> = ({ conference }) => {\n  const day = getDayByDate(conference.date);\n  const { start, end, date, title, slug, short, track } = conference;\n  return (\n    <div className=\"speaker__conference-slot dotted-corner\">\n      <div className=\"conference__track\">\n        {date ? (\n          <>\n            {' '}\n            <span className=\"h6\">\n              {day.title}\n              {track ? (\n                <>\n                  <br /> {`Track #${track}`}\n                </>\n              ) : null}\n            </span>\n            <span className=\"overline\">{getConferenceDate(date)}</span>\n          </>\n        ) : null}\n      </div>\n      <div className=\"conference__content\">\n        <span className=\"overline\">{getConferenceTimes(date, start, end)}</span>\n        <h3 className=\"h6 lined lined-left\">{title}</h3>\n        <p>{short}</p>\n        <Button className=\"square\" size=\"small\" to={slug}>\n          See details\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default SpeakerConferenceSlot;\n","import React from 'react';\nimport Layout from '@con/components/2022/layout';\nimport { PageProps } from 'gatsby';\nimport SpeakerTemplateBase from '@con/components/templates/SpeakerTemplate';\nimport SpeakerConferenceSlot from '@con/components/2022/Speakers/SpeakerConferenceSlot';\nimport BuyButton from '../BuyButton';\n\ninterface SpeakerTemplateProps extends PageProps {\n  pageContext: {\n    html: string;\n    title: string;\n    id: string;\n    name: string;\n    slug: string;\n    job: string;\n    company: string;\n    description: string;\n    edition: string;\n  };\n}\n\nconst SpeakerTemplate: React.ComponentType<SpeakerTemplateProps> = (props) => {\n  const { pageContext } = props;\n  return (\n    <Layout logoAlwaysVisible>\n      <SpeakerTemplateBase\n        {...props}\n        SpeakerConferenceSlotComponent={SpeakerConferenceSlot}\n        extraContent={\n          <BuyButton className=\"mt-20 pink square\" id={pageContext.name} size=\"large\">\n            Get your ticket!\n          </BuyButton>\n        }\n      />\n    </Layout>\n  );\n};\n\nexport default SpeakerTemplate;\n","import { useContext } from 'react';\nimport { ConfContext } from '@con/components/layout';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Conference } from 'src/con/types';\n\nconst useConferences: (speaker?: string) => Conference[] = (speaker) => {\n  const { edition } = useContext(ConfContext);\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(limit: 1000, filter: { frontmatter: { type: { eq: \"conference\" } } }) {\n        nodes {\n          frontmatter {\n            title\n            speakers\n            track\n            start\n            date\n            end\n            short\n            github\n          }\n          headings(depth: h1) {\n            value\n          }\n          fields {\n            slug\n            collection\n          }\n        }\n      }\n    }\n  `);\n\n  const conferences = data.allMarkdownRemark.nodes\n    .filter((conferenceData) => !speaker || conferenceData.frontmatter.speakers.includes(speaker))\n    .filter((conferenceData) => conferenceData.fields.collection === `con${edition}`)\n    .map((conference) => ({\n      ...conference.frontmatter,\n      title: conference.headings?.[0].value,\n      slug: `/con/${edition}${conference.fields.slug}`,\n    }));\n\n  return conferences;\n};\n\nexport default useConferences;\n","const nav = {\n  logoLink: '/',\n  links: [\n    {\n      to: '/con/2022/',\n      text: 'Home',\n      mobileOnly: true,\n    },\n    {\n      to: '/con/2022/speakers',\n      text: 'Speakers',\n    },\n    {\n      to: '/con/2022/#pricing',\n      text: 'Pricing',\n    },\n    {\n      to: '/con/2022/#venue',\n      text: 'Venue',\n    },\n    {\n      to: '/con/2022/schedule',\n      text: 'Schedule',\n    },\n    {\n      to: '/con/2022/#partners',\n      text: 'Partners',\n    },\n    {\n      to: '/con/2021/review',\n      text: '2021 review',\n    },\n  ],\n};\n\nexport default nav;\n","const footer = [\n  {\n    title: 'Previous edition',\n    links: [\n      {\n        title: '2021 review',\n        link: '/con/2021/review',\n      },\n      {\n        title: '2021 archive',\n        link: '/con/2021/',\n      },\n    ],\n  },\n  {\n    title: 'The event',\n    links: [\n      {\n        title: 'Speakers',\n        link: '/con/2022/speakers',\n      },\n      {\n        title: 'Venue',\n        link: '/con/2022/#venue',\n      },\n      {\n        title: 'Schedule',\n        link: '/con/2022/schedule',\n      },\n      {\n        title: 'Pricing',\n        link: '/con/2022/#pricing',\n      },\n      {\n        title: 'Partners',\n        link: '/con/2022/#partners',\n      },\n    ],\n  },\n  {\n    title: 'Legal',\n    links: [\n      {\n        title: 'Code of conduct',\n        link: '/con/2022/code-of-conduct',\n      },\n      {\n        title: 'FAQ',\n        link: '/con/2022/faq',\n      },\n      {\n        title: 'Transparency',\n        link: '/con/2022/transparency',\n      },\n    ],\n  },\n];\n\nexport default footer;\n","export const TITLE = 'API Platform Conference 2022';\nexport const DESCRIPTION = 'The international conference dedicated to API Platform and its ecosystem';\nexport const OG_IMAGE = `${process.env.GATSBY_ROOT_URL}/conf-facebook-2022.png`;\nexport const URL = 'https://api-platform.com/con/2022/';\nconst meta = {\n  TITLE,\n  DESCRIPTION,\n  OG_IMAGE,\n  URL,\n};\n\nexport default meta;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport Helmet from 'react-helmet';\nimport nav from '@con/data/2022/nav';\nimport footer from '@con/data/2022/footer';\nimport prices from '@con/data/2022/prices';\nimport { ConfContext } from '@con/components/layout';\nimport SectionsContext from '@con/contexts/SectionsContext';\nimport { useLocation } from '@reach/router';\nimport meta from '@con/data/2022/meta';\nimport LayoutBase from '@con/components/layout/LayoutBase';\nimport BuyButton from '@con/components/2022/BuyButton';\n\ninterface LayoutProps {\n  logoAlwaysVisible?: boolean;\n}\n\nconst Layout: React.ComponentType<LayoutProps> = ({ logoAlwaysVisible, children }) => {\n  const offersData = prices.map((price) => {\n    const sortedOffers = price.offers.sort((a, b) => {\n      if (dayjs(a.limitDate).isAfter(dayjs(b.limitDate))) return 1;\n      if (dayjs(b.limitDate).isAfter(dayjs(a.limitDate))) return -1;\n      return 0;\n    });\n    const activeOffer =\n      sortedOffers.find((offer) => dayjs(offer.limitDate).isAfter(dayjs())) || sortedOffers[sortedOffers.length - 1];\n    return {\n      '@type': 'Offer',\n      availability: 'https://schema.org/InStock',\n      price: `${activeOffer.price}.00`,\n      name: 1 === price.offers.length ? price.title : `${price.title} - ${activeOffer.title}`,\n      priceCurrency: 'EUR',\n      url: 'https://www.eventbrite.fr/e/api-platform-conference-2022-tickets-304104152707',\n      validFrom: '2022-04-07',\n    };\n  });\n\n  const eventData = {\n    '@context': 'https://schema.org',\n    '@type': 'Event',\n    name: 'API Platform Conference 2022',\n    description: 'The international conference dedicated to API Platform and its ecosystem',\n    url: 'https://api-platform.com/con/2022/',\n    eventStatus: 'http://schema.org/EventScheduled',\n    eventAttendanceMode: 'https://schema.org/MixedEventAttendanceMode',\n    startDate: '2022-09-15',\n    endDate: '2022-09-15',\n    organizer: {\n      '@type': 'Organization',\n      name: 'Les-Tilleuls.coop',\n      url: 'https://les-tilleuls.coop/en',\n    },\n    location: [\n      {\n        '@type': 'Place',\n        name: 'Euratechnologies',\n        address: {\n          '@type': 'PostalAddress',\n          addressLocality: 'Lille',\n          addressRegion: 'Hauts de France',\n          postalCode: '59000',\n          streetAddress: 'Place de Saintignon, 165 avenue de Bretagne',\n        },\n      },\n      {\n        '@type': 'VirtualLocation',\n        url: 'https://api-platform.com/con/2022/',\n      },\n    ],\n    image: meta.OG_IMAGE,\n    offers: offersData,\n  };\n\n  // anchors handler\n  const { pathname } = useLocation();\n  const [sectionsVisibles, setSectionsVisibles] = useState<string[]>([]);\n  const activeLink = useMemo(() => {\n    const lastSectionVisible = sectionsVisibles?.[sectionsVisibles.length - 1];\n    if (!lastSectionVisible || 'home' === lastSectionVisible) return pathname;\n    return sectionsVisibles.length ? `${pathname}#${sectionsVisibles[sectionsVisibles.length - 1]}` : pathname;\n  }, [sectionsVisibles, pathname]);\n\n  useEffect(() => {\n    window.history.replaceState({}, '', activeLink);\n  }, [activeLink]);\n\n  const [isEventBriteLoaded, setIsEventBriteLoaded] = useState(false);\n\n  useEffect(() => {\n    const s = document.createElement('script');\n    s.src = 'https://www.eventbrite.com/static/widgets/eb_widgets.js';\n    s.onload = () => {\n      setIsEventBriteLoaded(true);\n    };\n    document.body.appendChild(s);\n  }, [setIsEventBriteLoaded]);\n\n  return (\n    <ConfContext.Provider value={{ nav, activeLink, edition: '2022', isEventBriteLoaded }}>\n      <SectionsContext.Provider value={{ sectionsVisibles, setSectionsVisibles }}>\n        <Helmet>\n          <script type=\"application/ld+json\">{JSON.stringify(eventData)}</script>\n          <script defer src=\"https://unpkg.com/smoothscroll-polyfill/dist/smoothscroll.min.js\" />\n        </Helmet>\n        <LayoutBase\n          edition=\"2022\"\n          meta={meta}\n          logoAlwaysVisible={logoAlwaysVisible}\n          footer={footer}\n          navButton={\n            <BuyButton className=\"pink\" size=\"small\" id=\"nav\">\n              Buy ticket\n            </BuyButton>\n          }\n        >\n          {children}\n        </LayoutBase>\n      </SectionsContext.Provider>\n    </ConfContext.Provider>\n  );\n};\n\nexport default Layout;\n","const days = [\n  {\n    date: '2022-09-13',\n    title: 'Workshop 1',\n    tracks: null,\n    single: true,\n  },\n  {\n    date: '2022-09-14',\n    title: 'Workshop 2',\n    tracks: null,\n    single: true,\n  },\n  {\n    date: '2022-09-15',\n    title: 'Con day 1',\n    tracks: ['FR', 'EN'],\n    single: false,\n  },\n  {\n    date: '2022-09-16',\n    title: 'Con day 2',\n    tracks: ['FR', 'EN'],\n    single: false,\n  },\n  {\n    date: '2022-09-17',\n    title: 'Hack day',\n    tracks: null,\n    single: true,\n  },\n];\n\nexport const getDayByDate = (date) => days.find((day) => day.date === date);\n\nexport default days;\n","import dayjs from 'dayjs';\nimport { Conference } from './types';\n\nexport const sortByStartDate: (conference1: Conference, conference2: Conference) => 1 | -1 | 0 = (\n  conference1,\n  conference2\n) => {\n  const date1 = conference1.start ? dayjs(`${conference1.date}T${conference1.start}`) : dayjs();\n  const date2 = conference2.start ? dayjs(`${conference2.date}T${conference2.start}`) : dayjs();\n  if (date1.isBefore(date2)) return -1;\n  if (date1.isAfter(date2)) return 1;\n  return 0;\n};\nexport const toLocaleDate: (date: string) => string = (date) => dayjs(date).format('ll');\n\nexport const convertTime: (date: string, time: string) => string = (date, time) =>\n  dayjs(`${date}T${time}`).format('HH:mm A');\n\nexport const isMorningTime: (time?: string) => boolean = (time) => time && 12 >= parseInt(time.split(':')[0], 10);\n\nexport const getConferenceTimes: (date: string, start?: string, end?: string) => string = (date, start, end) =>\n  start && end ? `${convertTime(date, start)} - ${convertTime(date, end)}` : toLocaleDate(date);\n\nexport const getConferenceDate: (date: string, start?: string, end?: string) => string = (date, start, end) =>\n  start && end ? `${toLocaleDate(date)} · ${getConferenceTimes(date, start, end)}` : toLocaleDate(date);\n"],"sourceRoot":""}