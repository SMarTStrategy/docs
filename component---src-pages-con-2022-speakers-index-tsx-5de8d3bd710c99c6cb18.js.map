{"version":3,"sources":["webpack:///./src/components/common/Grid.js","webpack:///./src/con/components/common/Button.tsx","webpack:///./src/pages/con/2022/speakers/index.tsx","webpack:///./src/con/components/common/SectionTitle.tsx","webpack:///./src/con/data/2022/prices.ts","webpack:///./src/con/contexts/SectionsContext.tsx","webpack:///./src/con/components/2021/Speakers/SpeakerSocialList.tsx","webpack:///./src/con/hooks/useEventBriteModal.tsx","webpack:///./src/con/components/2022/BuyButton.tsx","webpack:///./src/con/data/2022/nav.ts","webpack:///./src/con/data/2022/footer.ts","webpack:///./src/con/data/2022/meta.ts","webpack:///./src/con/components/2022/layout/index.tsx","webpack:///./src/con/hooks/useSpeakers.tsx","webpack:///./src/con/components/2021/Speakers/SpeakerCircle.tsx","webpack:///./src/con/components/2021/Speakers/SpeakerList.tsx","webpack:///./src/con/components/common/SpeakersPage.tsx"],"names":["Grid","left","children","className","classnames","defaultProps","GridItem","padding","limitWidth","full","autosize","auto","Button","empty","disabled","to","size","external","props","classNames","small","href","target","rel","Speakers","logoAlwaysVisible","property","content","name","SectionTitle","dark","lined","h1","prices","id","title","languages","offers","price","limitDate","startDate","SectionsContext","createContext","SpeakerSocialList","speaker","github","twitter","useEventBriteModal","isEventBriteLoaded","useContext","ConfContext","useState","isWidgetCreated","setIsWidgetCreated","useLayoutEffect","window","EBWidgets","createWidget","widgetType","eventId","modal","modalTriggerElementId","BuyButton","nav","logoLink","links","text","mobileOnly","footer","link","meta","TITLE","DESCRIPTION","OG_IMAGE","process","URL","Layout","offersData","map","sortedOffers","sort","a","b","dayjs","isAfter","activeOffer","find","offer","length","availability","priceCurrency","url","validFrom","eventData","description","eventStatus","eventAttendanceMode","endDate","organizer","location","address","addressLocality","addressRegion","postalCode","streetAddress","image","pathname","useLocation","sectionsVisibles","setSectionsVisibles","activeLink","useMemo","lastSectionVisible","useEffect","history","replaceState","setIsEventBriteLoaded","s","document","createElement","src","onload","body","appendChild","Provider","value","edition","type","JSON","stringify","defer","LayoutBase","navButton","useSpeakers","ids","useStaticQuery","allMarkdownRemark","nodes","filter","speakerData","includes","frontmatter","fields","collection","slug","SpeakerCircle","social","hoverable","job","company","images","allFile","imageData","getImage","jobTitle","alt","xmlns","viewBox","d","SpeakerList","speakers","key","SpeakersPage","ContactCard"],"mappings":"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","file":"component---src-pages-con-2022-speakers-index-tsx-5de8d3bd710c99c6cb18.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nexport const Grid = ({ left, children, className }) => (\n  <div className={classnames(className, 'grid__container', { left })}>{children}</div>\n);\n\nGrid.propTypes = {\n  left: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n\nGrid.defaultProps = {\n  left: false,\n  className: '',\n};\n\nexport const GridItem = ({ className, padding, limitWidth, full, children, autosize }) => (\n  <div\n    className={classnames(className, 'grid__item', {\n      [`p-${padding}`]: !!padding || 0 === padding,\n      'no-min': !limitWidth,\n      auto: autosize,\n      full,\n    })}\n  >\n    {children}\n  </div>\n);\n\nGridItem.propTypes = {\n  full: PropTypes.bool,\n  padding: PropTypes.number,\n  limitWidth: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  autosize: PropTypes.bool,\n};\n\nGridItem.defaultProps = {\n  full: false,\n  limitWidth: true,\n  padding: null,\n  className: '',\n  autosize: false,\n};\n","import React from 'react';\nimport classnames from 'classnames';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLDivElement> {\n  size?: 'small' | 'large';\n  className?: string;\n  empty?: boolean;\n  disabled?: boolean;\n  to?: string;\n  external?: boolean;\n}\n\nconst Button: React.ComponentType<ButtonProps> = ({\n  children,\n  className,\n  empty,\n  disabled,\n  to,\n  size = 'large',\n  external = false,\n  ...props\n}) => {\n  const classNames = classnames('conf__button', { small: 'small' === size, empty, disabled }, className);\n  const externalProps = { target: '_blank', rel: 'noopener noreferrer' };\n\n  return to ? (\n    <a className={classNames} href={to} {...(external ? externalProps : {})}>\n      {children}\n    </a>\n  ) : (\n    <div className={classNames} {...props}>\n      {children}\n    </div>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { PageProps } from 'gatsby';\nimport Layout from '@con/components/2022/layout';\nimport SpeakersPage from '@con/components/common/SpeakersPage';\n\nconst Speakers: React.ComponentType<PageProps> = () => (\n  <Layout logoAlwaysVisible>\n    <Helmet>\n      <title>Speakers</title>\n      <meta property=\"og:title\" content=\"Speakers\" />\n      <meta name=\"twitter:title\" content=\"Speakers\" />\n    </Helmet>\n    <SpeakersPage />\n  </Layout>\n);\n\nexport default Speakers;\n","import React from 'react';\nimport classnames from 'classnames';\n\ninterface SectionTitleProps {\n  dark?: boolean;\n  lined?: boolean;\n  h1?: boolean;\n  small?: boolean;\n}\n\nconst SectionTitle: React.ComponentType<SectionTitleProps> = ({\n  children,\n  dark = false,\n  lined = false,\n  h1 = false,\n  small = false,\n}) => (\n  <div className={classnames('conf__section-title', { dark, small })}>\n    {h1 ? <h1 className=\"h2 title__layer\">{children}</h1> : <h2 className=\"title__layer\">{children}</h2>}\n    <div className={classnames('h2', { lined })}>{children}</div>\n  </div>\n);\n\nexport default SectionTitle;\n","import { Price } from '@con/types';\n\nconst prices: Price[] = [\n  {\n    id: 1,\n    title: 'Conference',\n    languages: 'French and english-speaking tracks',\n    offers: [\n      {\n        title: '2 days on-site event',\n        price: 129,\n        limitDate: '2022-08-20',\n      },\n      {\n        title: '1-day on-site event',\n        price: 89,\n        limitDate: '2022-08-20',\n      },\n      {\n        title: '2 days on-site event',\n        price: 169,\n        startDate: '2022-08-21',\n      },\n      {\n        title: '1-day on-site event',\n        price: 109,\n        startDate: '2022-08-21',\n      },\n      {\n        title: 'Online ticket',\n        price: 59,\n      },\n    ],\n  },\n  {\n    id: 2,\n    title: 'Workshops',\n    languages: 'Learn the best of API Platform 3',\n    offers: [\n      {\n        title: 'Workshop API Platform 3',\n        price: 500,\n      },\n      {\n        title: 'Workshop DDD',\n        price: 500,\n      },\n      {\n        title: '2-days workshops',\n        price: 800,\n      },\n      {\n        title: 'Full package: 2 workshops and 2-days conference',\n        price: 900,\n      },\n    ],\n  },\n];\n\nexport default prices;\n","import { createContext } from 'react';\n\ninterface SectionsContextInterface {\n  sectionsVisibles: string[];\n  setSectionsVisibles: (sections: string[]) => void;\n}\n\nconst SectionsContext = createContext<SectionsContextInterface>(null);\n\nexport default SectionsContext;\n","import React from 'react';\nimport { Speaker } from '@con/types';\n\ninterface SpeakerSocialListProps {\n  speaker: Speaker;\n}\n\nconst SpeakerSocialList: React.ComponentType<SpeakerSocialListProps> = ({ speaker }) => {\n  const { github, twitter } = speaker;\n  return (\n    <div className=\"social__list\">\n      {github && (\n        <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n          <span className=\"icon-github\" />\n        </a>\n      )}\n      {twitter && (\n        <a href={twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n          <span className=\"icon-twitter\" />\n        </a>\n      )}\n    </div>\n  );\n};\n\nexport default SpeakerSocialList;\n","import { useLayoutEffect, useContext, useState } from 'react';\nimport { ConfContext } from '@con/components/layout';\n\nconst useEventBriteModal: (id: string) => void = (id) => {\n  const { isEventBriteLoaded } = useContext(ConfContext);\n  const [isWidgetCreated, setIsWidgetCreated] = useState(false);\n\n  useLayoutEffect(() => {\n    if (isEventBriteLoaded && !isWidgetCreated) {\n      // @ts-expect-error eventbrite widget\n      window.EBWidgets?.createWidget({\n        widgetType: 'checkout',\n        eventId: '304104152707',\n        modal: true,\n        modalTriggerElementId: id,\n      });\n      setIsWidgetCreated(true);\n    }\n  }, [isEventBriteLoaded, id, isWidgetCreated, setIsWidgetCreated]);\n};\n\nexport default useEventBriteModal;\n","import React from 'react';\nimport useEventBriteModal from '@con/hooks/useEventBriteModal';\nimport Button, { ButtonProps } from '@con/components/common/Button';\n\ninterface BuyButtonProps extends ButtonProps {\n  id: string;\n}\n\nconst BuyButton: React.ComponentType<BuyButtonProps> = ({ children, id, ...props }) => {\n  useEventBriteModal(id);\n\n  return (\n    <Button id={id} {...props}>\n      {children}\n    </Button>\n  );\n};\n\nexport default BuyButton;\n","const nav = {\n  logoLink: '/',\n  links: [\n    {\n      to: '/con/2022/',\n      text: 'Home',\n      mobileOnly: true,\n    },\n    {\n      to: '/con/2022/speakers',\n      text: 'Speakers',\n    },\n    {\n      to: '/con/2022/#pricing',\n      text: 'Pricing',\n    },\n    {\n      to: '/con/2022/#venue',\n      text: 'Venue',\n    },\n    {\n      to: '/con/2022/schedule',\n      text: 'Schedule',\n    },\n    {\n      to: '/con/2022/#partners',\n      text: 'Partners',\n    },\n    {\n      to: '/con/2021/review',\n      text: '2021 review',\n    },\n  ],\n};\n\nexport default nav;\n","const footer = [\n  {\n    title: 'Previous edition',\n    links: [\n      {\n        title: '2021 review',\n        link: '/con/2021/review',\n      },\n      {\n        title: '2021 archive',\n        link: '/con/2021/',\n      },\n    ],\n  },\n  {\n    title: 'The event',\n    links: [\n      {\n        title: 'Speakers',\n        link: '/con/2022/speakers',\n      },\n      {\n        title: 'Venue',\n        link: '/con/2022/#venue',\n      },\n      {\n        title: 'Schedule',\n        link: '/con/2022/schedule',\n      },\n      {\n        title: 'Pricing',\n        link: '/con/2022/#pricing',\n      },\n      {\n        title: 'Partners',\n        link: '/con/2022/#partners',\n      },\n    ],\n  },\n  {\n    title: 'Legal',\n    links: [\n      {\n        title: 'Code of conduct',\n        link: '/con/2022/code-of-conduct',\n      },\n      {\n        title: 'FAQ',\n        link: '/con/2022/faq',\n      },\n      {\n        title: 'Transparency',\n        link: '/con/2022/transparency',\n      },\n    ],\n  },\n];\n\nexport default footer;\n","export const TITLE = 'API Platform Conference 2022';\nexport const DESCRIPTION = 'The international conference dedicated to API Platform and its ecosystem';\nexport const OG_IMAGE = `${process.env.GATSBY_ROOT_URL}/conf-facebook-2022.png`;\nexport const URL = 'https://api-platform.com/con/2022/';\nconst meta = {\n  TITLE,\n  DESCRIPTION,\n  OG_IMAGE,\n  URL,\n};\n\nexport default meta;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport Helmet from 'react-helmet';\nimport nav from '@con/data/2022/nav';\nimport footer from '@con/data/2022/footer';\nimport prices from '@con/data/2022/prices';\nimport { ConfContext } from '@con/components/layout';\nimport SectionsContext from '@con/contexts/SectionsContext';\nimport { useLocation } from '@reach/router';\nimport meta from '@con/data/2022/meta';\nimport LayoutBase from '@con/components/layout/LayoutBase';\nimport BuyButton from '@con/components/2022/BuyButton';\n\ninterface LayoutProps {\n  logoAlwaysVisible?: boolean;\n}\n\nconst Layout: React.ComponentType<LayoutProps> = ({ logoAlwaysVisible, children }) => {\n  const offersData = prices.map((price) => {\n    const sortedOffers = price.offers.sort((a, b) => {\n      if (dayjs(a.limitDate).isAfter(dayjs(b.limitDate))) return 1;\n      if (dayjs(b.limitDate).isAfter(dayjs(a.limitDate))) return -1;\n      return 0;\n    });\n    const activeOffer =\n      sortedOffers.find((offer) => dayjs(offer.limitDate).isAfter(dayjs())) || sortedOffers[sortedOffers.length - 1];\n    return {\n      '@type': 'Offer',\n      availability: 'https://schema.org/InStock',\n      price: `${activeOffer.price}.00`,\n      name: 1 === price.offers.length ? price.title : `${price.title} - ${activeOffer.title}`,\n      priceCurrency: 'EUR',\n      url: 'https://www.eventbrite.fr/e/api-platform-conference-2022-tickets-304104152707',\n      validFrom: '2022-04-07',\n    };\n  });\n\n  const eventData = {\n    '@context': 'https://schema.org',\n    '@type': 'Event',\n    name: 'API Platform Conference 2022',\n    description: 'The international conference dedicated to API Platform and its ecosystem',\n    url: 'https://api-platform.com/con/2022/',\n    eventStatus: 'http://schema.org/EventScheduled',\n    eventAttendanceMode: 'https://schema.org/MixedEventAttendanceMode',\n    startDate: '2022-09-15',\n    endDate: '2022-09-15',\n    organizer: {\n      '@type': 'Organization',\n      name: 'Les-Tilleuls.coop',\n      url: 'https://les-tilleuls.coop/en',\n    },\n    location: [\n      {\n        '@type': 'Place',\n        name: 'Euratechnologies',\n        address: {\n          '@type': 'PostalAddress',\n          addressLocality: 'Lille',\n          addressRegion: 'Hauts de France',\n          postalCode: '59000',\n          streetAddress: 'Place de Saintignon, 165 avenue de Bretagne',\n        },\n      },\n      {\n        '@type': 'VirtualLocation',\n        url: 'https://api-platform.com/con/2022/',\n      },\n    ],\n    image: meta.OG_IMAGE,\n    offers: offersData,\n  };\n\n  // anchors handler\n  const { pathname } = useLocation();\n  const [sectionsVisibles, setSectionsVisibles] = useState<string[]>([]);\n  const activeLink = useMemo(() => {\n    const lastSectionVisible = sectionsVisibles?.[sectionsVisibles.length - 1];\n    if (!lastSectionVisible || 'home' === lastSectionVisible) return pathname;\n    return sectionsVisibles.length ? `${pathname}#${sectionsVisibles[sectionsVisibles.length - 1]}` : pathname;\n  }, [sectionsVisibles, pathname]);\n\n  useEffect(() => {\n    window.history.replaceState({}, '', activeLink);\n  }, [activeLink]);\n\n  const [isEventBriteLoaded, setIsEventBriteLoaded] = useState(false);\n\n  useEffect(() => {\n    const s = document.createElement('script');\n    s.src = 'https://www.eventbrite.com/static/widgets/eb_widgets.js';\n    s.onload = () => {\n      setIsEventBriteLoaded(true);\n    };\n    document.body.appendChild(s);\n  }, [setIsEventBriteLoaded]);\n\n  return (\n    <ConfContext.Provider value={{ nav, activeLink, edition: '2022', isEventBriteLoaded }}>\n      <SectionsContext.Provider value={{ sectionsVisibles, setSectionsVisibles }}>\n        <Helmet>\n          <script type=\"application/ld+json\">{JSON.stringify(eventData)}</script>\n          <script defer src=\"https://unpkg.com/smoothscroll-polyfill/dist/smoothscroll.min.js\" />\n        </Helmet>\n        <LayoutBase\n          edition=\"2022\"\n          meta={meta}\n          logoAlwaysVisible={logoAlwaysVisible}\n          footer={footer}\n          navButton={\n            <BuyButton className=\"pink\" size=\"small\" id=\"nav\">\n              Buy ticket\n            </BuyButton>\n          }\n        >\n          {children}\n        </LayoutBase>\n      </SectionsContext.Provider>\n    </ConfContext.Provider>\n  );\n};\n\nexport default Layout;\n","import { useContext } from 'react';\nimport { ConfContext } from '@con/components/layout';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { Speaker } from 'src/con/types';\n\nconst useSpeakers: (ids?: string[]) => Speaker[] = (ids) => {\n  const { edition } = useContext(ConfContext);\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(\n        limit: 1000\n        filter: { frontmatter: { type: { eq: \"speaker\" } } }\n        sort: { fields: frontmatter___id, order: ASC }\n      ) {\n        nodes {\n          fields {\n            slug\n            collection\n          }\n          frontmatter {\n            name\n            id\n            number\n            job\n            company\n            twitter\n            github\n          }\n        }\n      }\n    }\n  `);\n\n  const speakers = data.allMarkdownRemark.nodes\n    .filter((speakerData) => !ids || ids.includes(speakerData.frontmatter.id))\n    .filter((speakerData) => speakerData.fields.collection === `con${edition}`)\n    .map((speaker) => ({\n      ...speaker.frontmatter,\n      slug: `/con/${edition}${speaker.fields.slug}`,\n    }));\n\n  return speakers;\n};\n\nexport default useSpeakers;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport classNames from 'classnames';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport { Speaker } from '@con/types';\nimport SpeakerSocialList from './SpeakerSocialList';\n\ninterface SpeakerCircleProps {\n  speaker: Speaker;\n  social?: boolean;\n  hoverable?: boolean;\n}\n\nconst SpeakerCircle: React.ComponentType<SpeakerCircleProps> = ({ speaker, social = true, hoverable = true }) => {\n  const { id, name, job, company } = speaker;\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { sourceInstanceName: { eq: \"speakersImages\" } }) {\n        nodes {\n          name\n          childImageSharp {\n            gatsbyImageData(width: 240, placeholder: DOMINANT_COLOR)\n          }\n        }\n      }\n    }\n  `);\n  const images = data.allFile.nodes.find((imageData) => imageData.name === id);\n  const image = images && getImage(images);\n\n  const speakerData = {\n    '@context': 'http://schema.org',\n    '@type': 'Person',\n    name: speaker.name,\n    jobTitle: `${speaker.job} ${speaker.company ? `@ ${speaker.company}` : ''}`,\n  };\n\n  return (\n    <div className=\"conf__speaker-resume\">\n      <Helmet>\n        <script type=\"application/ld+json\">{JSON.stringify(speakerData)}</script>\n      </Helmet>\n      <a className={classNames('conf__speaker-content', { hoverable })} href={speaker.slug}>\n        <div className=\"circle__effect\">\n          <div className=\"circle\">\n            <GatsbyImage image={image} className=\"circle__picture\" alt={name} />\n            <svg className=\"circle__plus\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 281.49 281.49\">\n              <path d=\"M140.74,0C63.14,0,0,63.14,0,140.74S63.14,281.49,140.74,281.49s140.75-63.14,140.75-140.75S218.35,0,140.74,0Zm0,263.49A122.75,122.75,0,1,1,263.49,140.74,122.88,122.88,0,0,1,140.74,263.49Z\" />\n              <path d=\"M210.91,131.74H149.74V70.58a9,9,0,1,0-18,0v61.16H70.58a9,9,0,1,0,0,18h61.16v61.17a9,9,0,0,0,18,0V149.74h61.17a9,9,0,0,0,0-18Z\" />\n            </svg>\n          </div>\n        </div>\n        <div className=\"infos\">\n          <h3 className=\"h5\">{name}</h3>\n          <p className=\"overline lined\">\n            {job}\n            <br />\n            {company ? (\n              <>\n                @ <strong>{company}</strong>\n              </>\n            ) : null}\n          </p>\n        </div>\n      </a>\n      {social && <SpeakerSocialList speaker={speaker} />}\n    </div>\n  );\n};\n\nexport default SpeakerCircle;\n","import React from 'react';\nimport { Grid, GridItem } from '@components/common/Grid';\nimport useSpeakers from '@con/hooks/useSpeakers';\nimport SpeakerCircle from '@con/components/2021/Speakers/SpeakerCircle';\n\nconst SpeakerList: React.ComponentType = () => {\n  const speakers = useSpeakers();\n\n  return (\n    <Grid className=\"speakers-list__grid\">\n      {speakers.map((speaker) => (\n        <GridItem key={speaker.name}>\n          <SpeakerCircle speaker={speaker} />\n        </GridItem>\n      ))}\n    </Grid>\n  );\n};\n\nexport default SpeakerList;\n","import React from 'react';\nimport SectionTitle from '@con/components/common/SectionTitle';\nimport SpeakerList from '@con/components/2021/Speakers/SpeakerList';\nimport ContactCard from '@con/components/common/ContactCard';\nimport '@con/styles/index.scss';\n\nconst SpeakersPage: React.ComponentType = () => (\n  <>\n    <div className=\"conf__speakers-list\">\n      <div className=\"container\">\n        <div className=\"speakers__header\">\n          <SectionTitle h1 dark>\n            Meet our <strong>speakers</strong>\n          </SectionTitle>\n          <p className=\"conf__section-subtitle\">\n            Join international speakers sharing their knowledge on English and French-speaking tracks.\n          </p>\n        </div>\n        <div className=\"speakers-list__content\">\n          <SpeakerList />\n        </div>\n      </div>\n    </div>\n    <div className=\"conf__contact\">\n      <ContactCard />\n    </div>\n  </>\n);\n\nexport default SpeakersPage;\n"],"sourceRoot":""}